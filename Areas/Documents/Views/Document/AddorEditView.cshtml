@*@model LMS.DbModels.Document*@
@model GloableCommunication.Areas.Documents.Models.ViewModels.DocumentViewModel

@{
    ViewData["Title"] = "AddorEditView";
}

<div class="row">
    <div class="col-md-12">
        <form method="post" action="/Documents/Document/SaveData">
            <input type="hidden" name="DocumentId" class="form-control" id="DocumentId" value="@Model.DocumentId" />
            <input type="hidden" class="form-check-input" name="DocumentIsDelete" id="DocumentIsDelete" value="false" /> @*@Html.DisplayNameFor(model => model.DocumentIsDelete)*@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Model.Flag == 0)
            {
                <div class="form-group">
                    <label asp-for="DocumentTypeId" class="control-label">Type</label>
                    <select class="form-control" id="DocumentCategoryId" name="DocumentCategoryId">
                        @*<option selected disabled hidden>Choose here</option>*@
                        @foreach (var type in Model.DocumentTypes)
                        {
                            if (type.DocumentTypeId == Model.DocumentTypeId)
                            {
                                <option selected value="@type.DocumentTypeId">@type.DocumentTypeName</option>
                            }
                            else
                            {
                                <option value="@type.DocumentTypeId">@type.DocumentTypeName</option>
                            }
                        }
                    </select>
                </div>
            }
            else
            {
                <input type="hidden" name="DocumentCategoryId" class="form-control" id="DocumentCategoryId" value="@Model.Flag" />
            }
            <input type="hidden" name="urlPath" class="form-control" id="urlPath" value="/Documents/Document/SaveData" />
            <div class="form-group">
                <label asp-for="DocumentName" class="control-label">Name</label>
                <input placeholder="Name" name="DocumentName" class="form-control" id="DocumentName" maxlength="100" value="@Model.DocumentName" />
                <span asp-validation-for="DocumentName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DocumentDescription" class="control-label">Description</label>
                <textarea placeholder="Description" name="DocumentDescription" class="form-control" id="DocumentDescription" maxlength="250">@Model.DocumentDescription</textarea>
                <span asp-validation-for="DocumentDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DocumentFilePath" class="control-label"></label>
                <input type="file" name="UploadedFile" class="form-control" id="UploadedFile" maxlength="100" value="@Model.DocumentFilePath" />
                <span asp-validation-for="DocumentFilePath" class="text-danger"></span>
            </div>
        </form>
    </div>
</div>

<div class="progress-bar"></div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    //File uploading Script

    function uploadingZipFile() {
        //alert("urlPath = " + $("#urlPath").val());
        // Get document
        var files = $("#UploadedFile").get(0).files;
        // Create an FormData object
        let data = new FormData();
        //add ID if it is needed
        data.append("DocumentId", $("#DocumentId").val());
        data.append("DocumentTypeId", $("#DocumentCategoryId").val());
        if (!IsFilled("DocumentName", "Document Name", "Please fill the document name")) {
            return;
        }
        data.append("DocumentName", $("#DocumentName").val());
        data.append("DocumentDescription", $("#DocumentDescription").val());
        data.append("DocumentIsDelete", $("#DocumentIsDelete").val());
        data.append("InstituteId", $("#InstituteId").val());

        if (files.length > 0) {
            data.append("UploadedDoc", files[0]);
        }
        else {

            if ($("#DocumentId").val() == 0) {
                if (!IsFilled("UploadedDoc", "Upload File", "Please Choose a file to upload")) {
                    return;
                }
            }

        }

        data.append("name", "name");

        $.ajax({
            type: "POST",
            enctype: 'multipart/form-data',
            url: $("#urlPath").val(),
            data: data,
            processData: false,
            contentType: false,
            cache: false,
            timeout: 600000,
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                xhr.upload.addEventListener("progress", function (evt) {
                    if (evt.lengthComputable) {
                        var progress = Math.round((evt.loaded / evt.total) * 100);
                        $(".progress-bar").css("width", progress + "%").attr("aria-valuenow", progress);
                        $(".progress-bar").html(progress + "%");
                    }
                }, false);
                return xhr;
            },
            success: function (data) {

                alert("uploading done");
                $('#AddOrEditDocument').modal('hide');
                location.reload();

            },
            error: function (e) {
                alert("File uploading done!");
                $('#AddOrEditDocument').modal('hide');
                location.reload();

            }
        });
    }
</script>

<script>
    $("input").on("keyup", function () {
        var maxLength = $(this).attr("maxlength");
        if (maxLength == $(this).val().length) {
            alert("Characters length exceeds the Limit, please input less than " + maxLength + " characters");
        }
    })

    $("textarea").on("keyup", function () {
        var maxLength = $(this).attr("maxlength");
        if (maxLength == $(this).val().length) {
            alert("Characters length exceeds the Limit, please input less than " + maxLength + " characters");
        }
    })
</script>
<script>
    var uploadField = document.getElementById("UploadedFile");

    uploadField.onchange = function () {
        if (this.files[0].size > 10485760) {
            alert("File is too big! The size should be less than 10MB.");
            this.value = "";
        };
    };
</script>

